
# Properties for the Prolog Core
#
# Warranty & Liability
# To the extent permitted by applicable law and unless explicitly
# otherwise agreed upon, XLOG Technologies GmbH makes no warranties
# regarding the provided information. XLOG Technologies GmbH assumes
# no liability that any problems might be solved with the information
# provided by XLOG Technologies GmbH.
#
# Rights & License
# All industrial property rights regarding the information - copyright
# and patent rights in particular - are the sole property of XLOG
# Technologies GmbH. If the company was not the originator of some
# excerpts, XLOG Technologies GmbH has at least obtained the right to
# reproduce, change and translate the information.
#
# Reproduction is restricted to the whole unaltered document. Reproduction
# of the information is only allowed for non-commercial uses. Selling,
# giving away or letting of the execution of the library is prohibited.
# The library can be distributed as part of your applications and libraries
# for execution provided this comment remains unchanged.
#
# Trademarks
# Jekejeke is a registered trademark of XLOG Technologies GmbH.

pattern.instantiation_error.0=
instantiation_error=Argument should not be a variable.

pattern.type_error.2=id paraq
type_error.integer=Argument should be an integer, found %1$s.
type_error.atom=Argument should be an atom, found %1$s.
type_error.number=Argument should be a number, found %1$s.
type_error.predicate_indicator=Argument should be a predicate specification (_/_), found %1$s.
type_error.list=Argument should be a list ([] or [_|_]), found %1$s.
type_error.callable=Argument should be callable (atom or compound), found %1$s.
type_error.evaluable=Argument should have evaluable functor, found %1$s.
type_error.pair=Argument should be a pair (_-_), found %1$s.
type_error.assoc=Argument should be an association (_=_), found %1$s.
type_error.character=Argument should be a character (atom of length 1), found %1$s.
type_error.byte=Argument should be a byte (between 0 and 255), found %1$s.
type_error.ref=Argument should be a reference, found %1$s.
type_error.decimal=Argument should be a decimal, found %1$s.
type_error.float=Argument should be a float, found %1$s.
type_error.oper_indicator=Argument should be a syntax operator indicator, found %1$s.
type_error.value=Argument should be a number or a reference, found %1$s.
type_error.path=Argument should be a path specifier, found %1$s.

pattern.domain_error.2=id paraq
domain_error.operator_specifier=Argument should be an operator mode (fx, fy, xfx, yfx, xfy, xf, yf), found %1$s.
domain_error.operator_priority=Argument should be an operator level (less or equal 1200), found %1$s.
domain_error.prolog_flag=Argument should be a flag, found %1$s.
domain_error.flag_value=Argument should be a flag value, found %1$s.
domain_error.not_less_than_zero=Argument should be positive or 0, found %1$s.
domain_error.write_option=Argument should be a write option, found %1$s.
domain_error.read_option=Argument should be a read option, found %1$s.
domain_error.io_mode=Argument should be an input/output mode (read or write), found %1$s.
domain_error.consult_option=Argument should be a consult option, found %1$s.
domain_error.prolog_property=Argument should be a property, found %1$s.
domain_error.property_value=Argument should be a property value, found %1$s.
domain_error.meta_arg=Argument should be a meta-argument specifier (? or integer), found %1$s.
domain_error.variable_name=Argument should be a variable name, found %1$s.
domain_error.verbose_option=Argument should be a verbose option, found %1$s.
domain_error.link_option=Argument should be a link option, found %1$s.
domain_error.fix_option=Argument should be a package or file extension option, found %1$s.

representation_error.character_code=Illegal character code (not between 0 and 0x10FFFF).
representation_error.max_status=Illegal status code (greater than 255).
representation_error.byte=Illegal integer (not between - 2^7 and 2^7-1).
representation_error.short=Illegal integer (not between - 2^15 and 2^15-1).
representation_error.int=Illegal integer (not between - 2^31 and 2^31-1).
representation_error.long=Illegal integer (not between - 2^63 and 2^63-1).

pattern.evaluation_error.1=id
evaluation_error.zero_divisor=Division by zero.
evaluation_error.undefined=The function is undefined here.
evaluation_error.float_overflow=The function overflows the float range here.
evaluation_error.float_underflow=The function underflows the float range here.
evaluation_error.ordered=The function cannot compare.
evaluation_error.partial_function=No value for this argument.
evaluation_error.array_index=Array index out of range.

pattern.existence_error.2=id paraq
existence_error.procedure=Undefined predicate %1$s.
existence_error.source_sink=File %1$s not found.
existence_error.host=Host %1$s not found.
existence_error.port=Connection to %1$s failed.
existence_error.encoding=Unsupported encoding %1$s.
existence_error.source=Undefined source %1$s.
existence_error.context=No context at %1$s.
existence_error.provable=Undefined predicate %1$s.
existence_error.operator=Undefined, private or package local operator %1$s.
existence_error.body=Predicate %1$s implementation missing.
existence_error.code=Evaluable %1$s implementation missing.
existence_error.fullname=File %1$s not module.

existence_error.library=Text %1$s not in paths.
existence_error.verbatim=Text or child %1$s not in paths.

pattern.permission_error.3=id id paraq
permission_error.access.private_procedure=Can't access predicate %1$s.
permission_error.modify.static_procedure=Can't modify predicate %1$s.
permission_error.modify.flag=Can't modify unchangeable flag %1$s.
permission_error.modify.property=Can't modify unchangeable property %1$s.
permission_error.add.value=Can't add value %1$s to single valued property.
permission_error.input.binary_stream=Can't input from binary stream %1$s.
permission_error.output.binary_stream=Can't output to binary stream %1$s.
permission_error.input.text_stream=Can't input from text stream %1$s.
permission_error.output.text_stream=Can't output to text stream %1$s.
permission_error.create.operator=Can't create the operator %1$s.
permission_error.modify.operator=Can't modify the operator %1$s.
permission_error.modify.toolkit_capa=Can't modify the toolkit capability %1$s.
permission_error.promote.public=Can't promote predicate %1$s to public.
permission_error.promote.meta_predicate=Can't promote predicate %1$s to meta.
permission_error.promote.meta_function=Can't promote function %1$s to meta.
permission_error.promote.multifile=Can't promote predicate %1$s to multi-file.
permission_error.define.procedure=Can't define predicate %1$s, not visible.
permission_error.redefine.procedure=Can't redefine predicate %1$s, not marked multfile.
permission_error.coerce.procedure=Can't coerce predicate %1$s into other type.

pattern.system_error.1=id
system_error.user_abort=Execution aborted on user request.
system_error.user_exit=Execution exited on user request.
system_error.user_close=Execution closed on user request.
system_error.memory_threshold=Execution aborted since memory threshold exceeded.
system_error.deadlock_timeout=Execution aborted since deadlock timeout occurred.
system_error.timelimit_exceeded=Execution aborted since time limit exceeded.

pattern.resource_error.1=id
resource_error.socket_timeout=Input/output timeout.
resource_error.corrupt_archive=Corrupt archive.
resource_error.baseurl_missing=Base URL missing.
