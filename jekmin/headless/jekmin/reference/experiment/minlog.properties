
# Properties for the Minlog Extension
#
# Warranty & Liability
# To the extent permitted by applicable law and unless explicitly
# otherwise agreed upon, XLOG Technologies GmbH makes no warranties
# regarding the provided information. XLOG Technologies GmbH assumes
# no liability that any problems might be solved with the information
# provided by XLOG Technologies GmbH.
#
# Rights & License
# All industrial property rights regarding the information - copyright
# and patent rights in particular - are the sole property of XLOG
# Technologies GmbH. If the company was not the originator of some
# excerpts, XLOG Technologies GmbH has at least obtained the right to
# reproduce, change and translate the information.
#
# Reproduction is restricted to the whole unaltered document. Reproduction
# of the information is only allowed for non-commercial uses. Selling,
# giving away or letting of the execution of the library is prohibited.
# The library can be distributed as part of your applications and libraries
# for execution provided this comment remains unchanged.
#
# Restrictions
# Only to be distributed with programs that add significant and primary
# functionality to the library. Not to be distributed with additional
# software intended to replace any components of the library.
# 
# Trademarks
# Jekejeke is a registered trademark of XLOG Technologies GmbH.

syntax_error.sys_minus_unexpected=Delete set not fully covered by body.
syntax_error.sys_keep_missing=Forward rule requires at least one forward goal in body.

permission_error.add.assume=Can't assert clause or hook %1$s, already asserted.
permission_error.remove.assume=Can't retract clause or hook %1$s, already retracted.
permission_error.remove.delta=Delta computation yields duplicate drop %1$s.

domain_error.freezer=Argument should be freezer, found %1$s.

resource_error.sys_multi_run=Delta computation yields multiple runs.
resource_error.sys_suspend_var=Suspended goal retrieval needs at least one variable.

type_error.delta=Argument should be delta predicate, found %1$s.
type_error.attr=Argument should be attribute variable, found %1$s.
type_error.var=Argument should be variable, found %1$s.
type_error.fd_value=Argument should be integer value, found %1$s.
type_error.fd_set=Argument should be integer set, found %1$s.
type_error.fd_bool=Argument should be a constraint, found %1$s.
type_error.sat_value=Argument should be boolean value, found %1$s.
type_error.sat_expr=Argument should be boolean expression, found %1$s.

debug.post=Post
debug.diff=Diff
debug.more=More
debug.done=Done
debug.fact=Fact
